# Set colours to 24 bit colour
set-option -sa terminal-overrides ",xterm*:Tc"
# Show visual indicator when prefix is pressed
set -g status-right '#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}'
# Allow mouse scrolling and mouse click between windows
set -g mouse on
# In MS. How long you have to chain ESC to some other key - Makes ESC feel better in nvim if lower!
set -sg escape-time 2 
# Package Manager 
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# Status bar design
set -g status-style bg=default
set -g status-left ''
set -g status-right ''
set -g status-position bottom
# Window status style
setw -g window-status-format ' #[fg=magenta,bg=default]#I #[fg=white,bg=default]#W '
setw -g window-status-current-format ' #[fg=magenta,bg=default]#I #[fg=green,bg=default]#W '
# Smart pane switching with awareness of Vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# Move panes with CTRL-Arrow keys 
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# ============================================================================
# RESIZE MODE CONFIGURATION
# ============================================================================

# Create a new key table for resize mode
bind-key R switch-client -T resize

# In resize mode, use hjkl for resizing
bind-key -T resize h resize-pane -L 5 \; switch-client -T resize
bind-key -T resize j resize-pane -D 5 \; switch-client -T resize
bind-key -T resize k resize-pane -U 5 \; switch-client -T resize
bind-key -T resize l resize-pane -R 5 \; switch-client -T resize

# Fine-grained resizing
bind-key -T resize H resize-pane -L 1 \; switch-client -T resize
bind-key -T resize J resize-pane -D 1 \; switch-client -T resize
bind-key -T resize K resize-pane -U 1 \; switch-client -T resize
bind-key -T resize L resize-pane -R 1 \; switch-client -T resize

# Navigation in resize mode using CTRL+hjkl
bind-key -T resize C-h if-shell "$is_vim" "send-keys C-Left"  "select-pane -L" \; switch-client -T resize
bind-key -T resize C-j if-shell "$is_vim" "send-keys C-Down"  "select-pane -D" \; switch-client -T resize
bind-key -T resize C-k if-shell "$is_vim" "send-keys C-Up"  "select-pane -U" \; switch-client -T resize
bind-key -T resize C-l if-shell "$is_vim" "send-keys C-Right"  "select-pane -R" \; switch-client -T resize

# Exit resize mode
bind-key -T resize q switch-client -T root
bind-key -T resize Escape switch-client -T root
bind-key -T resize Enter switch-client -T root

# Optional: Show a visual indicator when in resize mode
bind-key -T resize r display-message "Resize Mode: hjkl=resize, HJKL=fine, Ctrl+hjkl=navigate, q/Esc/Enter=exit" \; switch-client -T resize

# ============================================================================
# ORIGINAL RESIZE BINDINGS (keeping as fallback/alternative)
# ============================================================================

# # Original resize pane bindings
# bind -n M-h if-shell "$is_vim" "send-keys M-Left" "resize-pane -L 5"
# bind -n M-l if-shell "$is_vim" "send-keys M-Right" "resize-pane -R 5"
# bind -n M-k if-shell "$is_vim" "send-keys M-Up" "resize-pane -U 5"
# bind -n M-j if-shell "$is_vim" "send-keys M-Down" "resize-pane -D 5"

# Navigation bindings 
bind -n C-h if-shell "$is_vim" "send-keys C-Left"  "select-pane -L"
bind -n C-l if-shell "$is_vim" "send-keys C-Right"  "select-pane -R"
bind -n C-k if-shell "$is_vim" "send-keys C-Up"  "select-pane -U"
bind -n C-j if-shell "$is_vim" "send-keys C-Down"  "select-pane -D"

# ============================================================================
# REST OF ORIGINAL CONFIG
# ============================================================================

# Allow nvim like controls to enter the copy/visual select mode
setw -g mode-keys vi
# Enable clipboard 
set -g set-clipboard on
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
# Numbering
set -g base-index 1
setw -g pane-base-index 1
# Renumbers the windows when one is deleted so that you don't need to detatch then re-attach to fix it
set-option -g renumber-windows on
# Set custom prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix
run '~/.tmux/plugins/tpm/tpm'
# Add binding to reload tmux.conf for fast, iterative development
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"
# Add a binding for rename window
bind-key t command-prompt -I "#W" "rename-window '%%'"
# Add a binding for rename session
bind-key T command-prompt -I "#S" "rename-session '%%'"
# Add full screening of single pane 
bind-key z resize-pane -Z
